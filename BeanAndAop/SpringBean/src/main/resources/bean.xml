<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--把对象的创建交给spring管理-->
    <!--
        1、创建bean的三种方式
        2、bean对象的作用范围
        3、bean对象的生命周期
    -->

    <!--创建bean的三种方式-->
    <!--第一种：使用默认构造函数创建
            在spring的bean标签，配id和class，没有其他属性，就是采用的默认构造函数创建
            如果此类中没有默认构造函数就会报错
    -->

    <!--    <bean id="accountService" class="cn.dsh.service.impl.AccoutnServiceImpl"></bean>-->


    <!-- 第二种：使用普通工厂中的方法创建对像（使用某个类中的方法创建对象，存入spring容器）
     <bean id="instanceFactory" class="cn.dsh.factory.Instancefactory"></bean>
     <bean id="accountService" factory-bean="instanceFactory" factory-method="getAccountService"/>-->

    <!--第三种：使用工厂中的静态方法创建对象（使用某个类的静态方法创建对象，存入spring容器）
    <bean id="accountService" class="cn.dsh.factory.Staticfactory" factory-method="getAccountService"/>-->

    <!--bean标签的作用范围调整
        scope：定义作用范围
        值:singleton(默认)(单例)
        prototype(多例)
        request(作用于web应用中的请求范围)
        session(作用于web应用的会话范围)
        global-session(作用于集群环境的会话范围,如果不是集群环境他就是session)
    -->
    <!--<bean id="accountService" class="cn.dsh.service.impl.AccoutnServiceImpl"></bean>-->

    <!--bean对象的生命周期
        单例：
            出生：当容器创建时
            活着：容器还在
            销毁：容器销毁
        多例：
            出生：当使用对象时，spring为我们创建
            活着：对象使用的过程中
            销毁：当对象长时间不用，没有别的对象引用时，由java的垃圾回收器回收
     -->

    <!--<bean id="accountService" class="cn.dsh.service.impl.AccoutnServiceImpl" init-method="init"
    destroy-method="destrot"></bean>-->
</beans>